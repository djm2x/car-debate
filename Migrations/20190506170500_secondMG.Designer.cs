// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mvc;

namespace mvc.Migrations
{
    [DbContext(typeof(CarDebateContext))]
    [Migration("20190506170500_secondMG")]
    partial class secondMG
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("mvc.Advert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnneModel");

                    b.Property<DateTime>("DateAdvert")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2019, 5, 6, 18, 5, 0, 161, DateTimeKind.Local).AddTicks(8391));

                    b.Property<DateTime>("DateSell")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2019, 5, 6, 18, 5, 0, 163, DateTimeKind.Local).AddTicks(7539));

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("IdModel");

                    b.Property<int>("IdUser");

                    b.Property<double>("Km");

                    b.Property<double>("Prix");

                    b.Property<bool>("state")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.HasKey("Id");

                    b.HasIndex("IdModel");

                    b.HasIndex("IdUser");

                    b.ToTable("Adverts");
                });

            modelBuilder.Entity("mvc.AdvertModelImg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdAdvert");

                    b.Property<string>("ImageUrl")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("IdAdvert");

                    b.ToTable("AdvertModelImgs");
                });

            modelBuilder.Entity("mvc.Carburant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Carburants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "essence"
                        },
                        new
                        {
                            Id = 2,
                            Name = "gasoile"
                        });
                });

            modelBuilder.Entity("mvc.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = @"https://www.picclickimg.com/d/l400/pict/332053619138_/
                    Drapeau-Flag-vlag-Maroc-Morocco-Marokko-Marocain-Moroccan.jpg",
                            Name = "maroc"
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = @"https://upload.wikimedia.org/wikipedia/commons/thumb/3/3a/Flag_of_France_%281794%E2%80%931815%2C
                    _1830%E2%80%931958%29.svg/250px-Flag_of_France_%281794%E2%80%931815%2C_1830%E2%80%931958%29.svg.png",
                            Name = "france"
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "https://i.pinimg.com/originals/1a/46/32/1a4632aa90fd07b3eb59eb0c6b8419f9.jpg",
                            Name = "allemand"
                        });
                });

            modelBuilder.Entity("mvc.Marque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCountry");

                    b.Property<string>("ImageUrl")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("IdCountry");

                    b.ToTable("Marques");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdCountry = 1,
                            ImageUrl = "https://i.pinimg.com/236x/63/7c/fd/637cfd3724d8e5bc3ec9b2550a723d87--peugeot-logo-peugeot-.jpg",
                            Name = "peugeot"
                        },
                        new
                        {
                            Id = 2,
                            IdCountry = 1,
                            ImageUrl = "https://images-na.ssl-images-amazon.com/images/I/61VaoHj7IbL._SX425_.jpg",
                            Name = "mercedes"
                        },
                        new
                        {
                            Id = 3,
                            IdCountry = 2,
                            ImageUrl = "https://images-eu.ssl-images-amazon.com/images/I/31vaJEpmCRL._AC_US218_.jpg",
                            Name = "ford"
                        },
                        new
                        {
                            Id = 4,
                            IdCountry = 2,
                            ImageUrl = "https://images-na.ssl-images-amazon.com/images/I/51v65ntrdXL._SX425_.jpg",
                            Name = "volkswagen"
                        },
                        new
                        {
                            Id = 5,
                            IdCountry = 3,
                            ImageUrl = "http://www.lorraine-automobiles.fr/wp/wp-content/uploads/2015/07/Renault-kadjar.png",
                            Name = "renault"
                        },
                        new
                        {
                            Id = 6,
                            IdCountry = 3,
                            ImageUrl = "https://ih0.redbubble.net/image.597289352.5586/raf,360x360,075,t,fafafa:ca443f4786.jpg",
                            Name = "dacia"
                        });
                });

            modelBuilder.Entity("mvc.Model", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Annee")
                        .HasMaxLength(4);

                    b.Property<int>("Autonomie");

                    b.Property<int>("BoiteVitesse");

                    b.Property<int>("Cc");

                    b.Property<float>("ConsAutoroute");

                    b.Property<float>("ConsRoute");

                    b.Property<float>("ConsVille");

                    b.Property<float>("FreinageUrgence");

                    b.Property<int>("IdCarburant");

                    b.Property<int>("IdMarque");

                    b.Property<int>("IdTransmission");

                    b.Property<int>("IdTypeVoiture");

                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(null);

                    b.Property<float>("Poid");

                    b.Property<float>("Prix");

                    b.Property<int>("Puissance");

                    b.Property<float>("Reservoir");

                    b.Property<float>("VitesseMax");

                    b.HasKey("Id");

                    b.HasIndex("IdCarburant");

                    b.HasIndex("IdMarque");

                    b.HasIndex("IdTransmission");

                    b.HasIndex("IdTypeVoiture");

                    b.HasIndex("IdUser");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = "model1",
                            Annee = 2010,
                            Autonomie = 1,
                            BoiteVitesse = 5,
                            Cc = 1,
                            ConsAutoroute = 1f,
                            ConsRoute = 1f,
                            ConsVille = 1f,
                            FreinageUrgence = 1f,
                            IdCarburant = 1,
                            IdMarque = 1,
                            IdTransmission = 1,
                            IdTypeVoiture = 1,
                            IdUser = 1,
                            Poid = 500f,
                            Prix = 10000f,
                            Puissance = 4,
                            Reservoir = 2f,
                            VitesseMax = 180f
                        },
                        new
                        {
                            Id = "model2",
                            Annee = 2015,
                            Autonomie = 1,
                            BoiteVitesse = 5,
                            Cc = 1,
                            ConsAutoroute = 1f,
                            ConsRoute = 1f,
                            ConsVille = 1f,
                            FreinageUrgence = 1f,
                            IdCarburant = 2,
                            IdMarque = 1,
                            IdTransmission = 3,
                            IdTypeVoiture = 3,
                            IdUser = 1,
                            Poid = 500f,
                            Prix = 12000f,
                            Puissance = 5,
                            Reservoir = 1f,
                            VitesseMax = 190f
                        },
                        new
                        {
                            Id = "model3",
                            Annee = 2005,
                            Autonomie = 1,
                            BoiteVitesse = 5,
                            Cc = 1,
                            ConsAutoroute = 1f,
                            ConsRoute = 1f,
                            ConsVille = 1f,
                            FreinageUrgence = 1f,
                            IdCarburant = 2,
                            IdMarque = 2,
                            IdTransmission = 2,
                            IdTypeVoiture = 2,
                            IdUser = 1,
                            Poid = 550f,
                            Prix = 15000f,
                            Puissance = 5,
                            Reservoir = 3f,
                            VitesseMax = 200f
                        },
                        new
                        {
                            Id = "model4",
                            Annee = 1995,
                            Autonomie = 1,
                            BoiteVitesse = 5,
                            Cc = 1,
                            ConsAutoroute = 1f,
                            ConsRoute = 1f,
                            ConsVille = 1f,
                            FreinageUrgence = 1f,
                            IdCarburant = 2,
                            IdMarque = 2,
                            IdTransmission = 2,
                            IdTypeVoiture = 2,
                            IdUser = 1,
                            Poid = 550f,
                            Prix = 15000f,
                            Puissance = 5,
                            Reservoir = 3f,
                            VitesseMax = 150f
                        },
                        new
                        {
                            Id = "model5",
                            Annee = 2018,
                            Autonomie = 1,
                            BoiteVitesse = 5,
                            Cc = 1,
                            ConsAutoroute = 1f,
                            ConsRoute = 1f,
                            ConsVille = 1f,
                            FreinageUrgence = 1f,
                            IdCarburant = 1,
                            IdMarque = 3,
                            IdTransmission = 2,
                            IdTypeVoiture = 2,
                            IdUser = 1,
                            Poid = 550f,
                            Prix = 20000f,
                            Puissance = 7,
                            Reservoir = 4f,
                            VitesseMax = 250f
                        },
                        new
                        {
                            Id = "model6",
                            Annee = 2008,
                            Autonomie = 1,
                            BoiteVitesse = 5,
                            Cc = 1,
                            ConsAutoroute = 1f,
                            ConsRoute = 1f,
                            ConsVille = 1f,
                            FreinageUrgence = 1f,
                            IdCarburant = 1,
                            IdMarque = 3,
                            IdTransmission = 2,
                            IdTypeVoiture = 2,
                            IdUser = 1,
                            Poid = 450f,
                            Prix = 18000f,
                            Puissance = 5,
                            Reservoir = 4f,
                            VitesseMax = 250f
                        },
                        new
                        {
                            Id = "model7",
                            Annee = 2013,
                            Autonomie = 1,
                            BoiteVitesse = 5,
                            Cc = 1,
                            ConsAutoroute = 1f,
                            ConsRoute = 1f,
                            ConsVille = 1f,
                            FreinageUrgence = 1f,
                            IdCarburant = 2,
                            IdMarque = 4,
                            IdTransmission = 4,
                            IdTypeVoiture = 2,
                            IdUser = 1,
                            Poid = 750f,
                            Prix = 28000f,
                            Puissance = 5,
                            Reservoir = 4f,
                            VitesseMax = 280f
                        },
                        new
                        {
                            Id = "model8",
                            Annee = 2015,
                            Autonomie = 1,
                            BoiteVitesse = 5,
                            Cc = 1,
                            ConsAutoroute = 1f,
                            ConsRoute = 1f,
                            ConsVille = 1f,
                            FreinageUrgence = 1f,
                            IdCarburant = 1,
                            IdMarque = 4,
                            IdTransmission = 4,
                            IdTypeVoiture = 3,
                            IdUser = 1,
                            Poid = 550f,
                            Prix = 22000f,
                            Puissance = 5,
                            Reservoir = 4f,
                            VitesseMax = 200f
                        },
                        new
                        {
                            Id = "model9",
                            Annee = 2011,
                            Autonomie = 1,
                            BoiteVitesse = 5,
                            Cc = 1,
                            ConsAutoroute = 1f,
                            ConsRoute = 1f,
                            ConsVille = 1f,
                            FreinageUrgence = 1f,
                            IdCarburant = 2,
                            IdMarque = 5,
                            IdTransmission = 4,
                            IdTypeVoiture = 3,
                            IdUser = 1,
                            Poid = 500f,
                            Prix = 18000f,
                            Puissance = 5,
                            Reservoir = 4f,
                            VitesseMax = 200f
                        },
                        new
                        {
                            Id = "model10",
                            Annee = 2014,
                            Autonomie = 1,
                            BoiteVitesse = 5,
                            Cc = 1,
                            ConsAutoroute = 1f,
                            ConsRoute = 1f,
                            ConsVille = 1f,
                            FreinageUrgence = 1f,
                            IdCarburant = 2,
                            IdMarque = 5,
                            IdTransmission = 4,
                            IdTypeVoiture = 3,
                            IdUser = 1,
                            Poid = 520f,
                            Prix = 21000f,
                            Puissance = 5,
                            Reservoir = 4f,
                            VitesseMax = 230f
                        },
                        new
                        {
                            Id = "model11",
                            Annee = 2019,
                            Autonomie = 1,
                            BoiteVitesse = 8,
                            Cc = 1,
                            ConsAutoroute = 1f,
                            ConsRoute = 1f,
                            ConsVille = 1f,
                            FreinageUrgence = 3f,
                            IdCarburant = 2,
                            IdMarque = 6,
                            IdTransmission = 4,
                            IdTypeVoiture = 4,
                            IdUser = 1,
                            Poid = 620f,
                            Prix = 40000f,
                            Puissance = 9,
                            Reservoir = 8f,
                            VitesseMax = 400f
                        },
                        new
                        {
                            Id = "model12",
                            Annee = 2017,
                            Autonomie = 1,
                            BoiteVitesse = 6,
                            Cc = 1,
                            ConsAutoroute = 1f,
                            ConsRoute = 1f,
                            ConsVille = 1f,
                            FreinageUrgence = 2f,
                            IdCarburant = 1,
                            IdMarque = 6,
                            IdTransmission = 4,
                            IdTypeVoiture = 4,
                            IdUser = 1,
                            Poid = 560f,
                            Prix = 32000f,
                            Puissance = 7,
                            Reservoir = 6f,
                            VitesseMax = 300f
                        });
                });

            modelBuilder.Entity("mvc.ModelImg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IdModel")
                        .IsRequired();

                    b.Property<string>("ImageUrl")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("IdModel");

                    b.ToTable("ModelImgs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdModel = "model1",
                            ImageUrl = "https://media.peugeot.co.uk/image/21/6/carousel-thumbnail-1.415216.6.png?autocrop=1"
                        },
                        new
                        {
                            Id = 2,
                            IdModel = "model1",
                            ImageUrl = "https://www.evanshalshaw.com/images/218994/1465584/1465625/all-new-peugeot-3008.jpg?view=Standard"
                        },
                        new
                        {
                            Id = 3,
                            IdModel = "model2",
                            ImageUrl = "https://media.peugeot.co.uk/image/52/9/308-cc-past-model.141529.141529.6.jpg?autocrop=1"
                        },
                        new
                        {
                            Id = 4,
                            IdModel = "model2",
                            ImageUrl = "http://stat.overdrive.in/wp-content/uploads/2017/07/2017-Peugeot-208.jpg"
                        },
                        new
                        {
                            Id = 5,
                            IdModel = "model3",
                            ImageUrl = "https://hips.hearstapps.com/amv-prod-cad-assets.s3.amazonaws.com/vdat/submodels/mercedes-benz_a-class_mercedes-benz-a-class_2019-1532641693802.jpg"
                        },
                        new
                        {
                            Id = 6,
                            IdModel = "model3",
                            ImageUrl = "http://cdn.24.co.za/files/Cms/General/d/7694/8698760d7b4c4b0b8802ec459b520882.jpg"
                        },
                        new
                        {
                            Id = 7,
                            IdModel = "model4",
                            ImageUrl = "https://www.cstatic-images.com/car-pictures/main/USC90MBCCC1A021001.png"
                        },
                        new
                        {
                            Id = 8,
                            IdModel = "model4",
                            ImageUrl = "https://img.timesnownews.com/media/1537969007-Badshah_Mercedes_GL350.jpg?d=600x450"
                        },
                        new
                        {
                            Id = 9,
                            IdModel = "model5",
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ0zeM9VJvumpJclkUO7YtDPqxtZimAZ4HsmbgfJxp6YTeu81ZK"
                        },
                        new
                        {
                            Id = 10,
                            IdModel = "model5",
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQDkmYO36lEpqblJOIbbzK4pQQ9uYaqm7T8GkQDyUMe9SqQ0b3y"
                        },
                        new
                        {
                            Id = 11,
                            IdModel = "model6",
                            ImageUrl = "https://hips.hearstapps.com/amv-prod-cad-assets.s3.amazonaws.com/vdat/submodels/ford_fusion_ford-fusion_2019-1546985124643.jpg"
                        },
                        new
                        {
                            Id = 12,
                            IdModel = "model6",
                            ImageUrl = "https://images.netdirector.co.uk/gforces-auto/image/upload/w_375,h_211,q_auto,c_fill,f_auto,fl_lossy/auto-client/d4e63030c0ae91f4791d72f4d839fb45/w9238618_ecos_cca_titan_34frntpassmtnlghtnngblue_mj.jpg"
                        },
                        new
                        {
                            Id = 13,
                            IdModel = "model7",
                            ImageUrl = "https://hips.hearstapps.com/amv-prod-cad-assets.s3.amazonaws.com/media/assets/submodel/8045.jpg"
                        },
                        new
                        {
                            Id = 14,
                            IdModel = "model7",
                            ImageUrl = "https://www.volkswagen.co.uk/files/live/sites/vwuk/files/Used/Used_MLPs/all%20models/more%20images/passat%20estate%202015-present.png"
                        },
                        new
                        {
                            Id = 15,
                            IdModel = "model8",
                            ImageUrl = "http://i4.aroq.com/3/2019-01-08-14-03-volkswagenpassatchinesespec_cropped_90.jpg"
                        },
                        new
                        {
                            Id = 16,
                            IdModel = "model8",
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSK25SOfav7clQLuQNJC8owhle7OoQ_C5hLTGEkrmv9UBJCsma13w"
                        },
                        new
                        {
                            Id = 17,
                            IdModel = "model9",
                            ImageUrl = "https://api.stoneacremotorgroup.co.uk/sites/default/files/renault-used-cars.png"
                        },
                        new
                        {
                            Id = 18,
                            IdModel = "model9",
                            ImageUrl = "https://stimg.cardekho.com/images/carexteriorimages/360x240/Renault/Renault-Scala/047.jpg"
                        },
                        new
                        {
                            Id = 19,
                            IdModel = "model10",
                            ImageUrl = "https://auto.ndtvimg.com/car-images/big/renault/captur/renault-captur.jpg?v=19"
                        },
                        new
                        {
                            Id = 20,
                            IdModel = "model10",
                            ImageUrl = "https://auto.ndtvimg.com/car-images/big/renault/duster/renault-duster.jpg?v=27"
                        },
                        new
                        {
                            Id = 21,
                            IdModel = "model11",
                            ImageUrl = "https://d1ek71enupal89.cloudfront.net/images/blocks_png/DACIA/SANDERO/5DR/17DacSanAmb5drBluFL1_800.jpg"
                        },
                        new
                        {
                            Id = 22,
                            IdModel = "model11",
                            ImageUrl = "https://images.netdirector.co.uk/gforces-auto/image/upload/w_200,h_113,dpr_2.0,q_auto,c_fill,f_auto,fl_lossy/auto-client/06b3f63486340a35d13fb1ef7ebd26af/sandero_2013_exterior_03.jpg"
                        },
                        new
                        {
                            Id = 23,
                            IdModel = "model12",
                            ImageUrl = "https://imgix.ranker.com/node_img/1579/31577061/original/dacia-sandero-automobile-models-photo-1?w=650&q=50&fm=pjpg&fit=crop&crop=faces"
                        },
                        new
                        {
                            Id = 24,
                            IdModel = "model12",
                            ImageUrl = "https://toomey.imgix.net/used-vehicle-photos/1/EO16HLR-1_20190412.jpg?fit=crop&max-w=480&max-h=320"
                        });
                });

            modelBuilder.Entity("mvc.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "users"
                        },
                        new
                        {
                            Id = 2,
                            Name = "sa"
                        },
                        new
                        {
                            Id = 3,
                            Name = "admins"
                        });
                });

            modelBuilder.Entity("mvc.Transmission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Transmissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "t1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "t2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "t3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "t4"
                        });
                });

            modelBuilder.Entity("mvc.TypeVoiture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("TypeVoitures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "type-1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "type-2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "type-3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "type-4"
                        });
                });

            modelBuilder.Entity("mvc.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FullName")
                        .IsRequired();

                    b.Property<int>("IdTypeUser");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Tel");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "sa@angular.io",
                            FullName = "sa",
                            IdTypeUser = 0,
                            Password = "123"
                        });
                });

            modelBuilder.Entity("mvc.UserRole", b =>
                {
                    b.Property<int>("IdRole");

                    b.Property<int>("IdUser");

                    b.HasKey("IdRole", "IdUser");

                    b.HasIndex("IdUser");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            IdRole = 3,
                            IdUser = 1
                        });
                });

            modelBuilder.Entity("mvc.Advert", b =>
                {
                    b.HasOne("mvc.Model", "Model")
                        .WithMany("Adverts")
                        .HasForeignKey("IdModel");

                    b.HasOne("mvc.User", "User")
                        .WithMany("Adverts")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("mvc.AdvertModelImg", b =>
                {
                    b.HasOne("mvc.Advert", "Advert")
                        .WithMany("AdvertModelImgs")
                        .HasForeignKey("IdAdvert")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("mvc.Marque", b =>
                {
                    b.HasOne("mvc.Country", "Country")
                        .WithMany("Marques")
                        .HasForeignKey("IdCountry")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("mvc.Model", b =>
                {
                    b.HasOne("mvc.Carburant", "Carburant")
                        .WithMany("Models")
                        .HasForeignKey("IdCarburant")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("mvc.Marque", "Marque")
                        .WithMany("Models")
                        .HasForeignKey("IdMarque")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("mvc.Transmission", "Transmission")
                        .WithMany("Models")
                        .HasForeignKey("IdTransmission")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("mvc.TypeVoiture", "TypeVoiture")
                        .WithMany("Models")
                        .HasForeignKey("IdTypeVoiture")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("mvc.User", "User")
                        .WithMany("Models")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("mvc.ModelImg", b =>
                {
                    b.HasOne("mvc.Model", "Model")
                        .WithMany("ModelImgs")
                        .HasForeignKey("IdModel")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("mvc.UserRole", b =>
                {
                    b.HasOne("mvc.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("mvc.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
